#
# MIT License
#
# Copyright(c) 2011-2019 The Maintainers of Nanvix
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

# C Source Files
C_SRC += stdout/tty-virt.c

# Filter C Source List
C_SRC := $(filter-out $(wildcard core/*.c), $(C_SRC))
C_SRC := $(filter-out $(wildcard cluster/*.c), $(C_SRC))
C_SRC := $(filter-out $(wildcard klib/*.c), $(C_SRC))
C_SRC := $(filter-out $(wildcard *.c), $(C_SRC))
C_SRC += klib/kmemcpy.c klib/kmemdump.c klib/kmemset.c
C_SRC += klib/kstrcmp.c klib/kstrcpy.c klib/kstrlen.c
C_SRC += klib/kstrncmp.c klib/kstrncpy.c
C_SRC += klib/kpanic.c klib/kprintf.c klib/kvsprintf.c klib/kputs.c
C_SRC += log.c
C_SRC += cluster/memory.c
C_SRC += core/perf.c
C_SRC += core/exception.c
C_SRC += core/interrupt.c

# Object Files
OBJ = $(ASM_SRC:.S=.$(CLUSTER)-$(CORE).o) \
	  $(C_SRC:.c=.$(CLUSTER)-$(CORE).o)

# Builds All Object Files
all: $(OBJ)
ifeq ($(VERBOSE), no)
	@echo [AR] $(LIBDIR)/$(LIBKERNEL)
	@$(AR) $(ARFLAGS) $(LIBDIR)/$(LIBKERNEL) $(OBJ)
else
	$(AR) $(ARFLAGS) $(LIBDIR)/$(LIBKERNEL) $(OBJ)
endif

# Cleans All Object Files
clean:
ifeq ($(VERBOSE), no)
	@echo [CLEAN] $(LIBDIR)/$(LIBKERNEL) $(OBJ)
	@rm -rf $(LIBDIR)/$(LIBKERNEL) $(OBJ)
else
	rm -rf $(LIBDIR)/$(LIBKERNEL) $(OBJ)
endif

# Builds a C Source file
%.$(CLUSTER)-$(CORE).o: %.c
ifeq ($(VERBOSE), no)
	@echo [CC] $@
	@$(CC) $(CFLAGS) $< -c -o $@
else
	$(CC) $(CFLAGS) $< -c -o $@
endif

# Builds an ASM Source File
%.$(CLUSTER)-$(CORE).o: %.S
ifeq ($(VERBOSE), no)
	@echo [AS] $@
	@$(CC) $(CFLAGS) $< -c -o $@
else
	$(CC) $(CFLAGS) $< -c -o $@
endif
